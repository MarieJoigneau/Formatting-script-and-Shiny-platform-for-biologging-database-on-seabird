#bird <- format_data_in_a_folder2(0,paste(list_of_all_folders[i],"raw_data",sep="/"),"no_separate")
bird <- format_data_in_a_folder2(0,list_of_all_folders[i],"no_separate")
}
### ---------- II.6. FORMAT FILES (IN NEW) ---------------------------
# Finally, we format the files well-named
for (i in 1:length(list_of_all_folders)){
print(paste("FOLDER",list_of_all_folders[i]))
#bird <- format_data_in_a_folder2(0,paste(list_of_all_folders[i],"raw_data",sep="/"),"no_separate")
bird <- format_data_in_a_folder2(0,list_of_all_folders[i],"no_separate")
}
library(datetime)
library(plyr)
library(lubridate)
library(M3)
library(dplyr)
library(stringr)
library(devtools)
library(suncalc)
library(gridGraphics)
library(tidyverse)
library(sf)
#library(mapview)
library(lutz)
library(filesstrings)
library(ggpubr)
library(cowplot)
source("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Formatage/Functions33.R")
# We first find all the sub folders in the mother folder
list_of_all_folders <- list.dirs(path="D:/OneDrive/Stage CESURE - Sete oiseaux marins/Formatage/test2",full.names=TRUE, recursive = TRUE)[-1]
print(paste("folder liste ",list_of_all_folders))
# For some files with different ID, we need to separate them...
for (i in 1:length(list_of_all_folders)){
print(paste("FOLDER",list_of_all_folders[i]))
bird <- format_data_in_a_folder2(1,list_of_all_folders[i],"separate")
}
### ---------- II.6. FORMAT FILES (IN NEW) ---------------------------
# Finally, we format the files well-named
for (i in 1:length(list_of_all_folders)){
print(paste("FOLDER",list_of_all_folders[i]))
#bird <- format_data_in_a_folder2(0,paste(list_of_all_folders[i],"raw_data",sep="/"),"no_separate")
bird <- format_data_in_a_folder2(1,list_of_all_folders[i],"no_separate")
}
source("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Formatage/Functions33.R")
### ---------- II.6. FORMAT FILES (IN NEW) ---------------------------
# Finally, we format the files well-named
for (i in 1:length(list_of_all_folders)){
print(paste("FOLDER",list_of_all_folders[i]))
#bird <- format_data_in_a_folder2(0,paste(list_of_all_folders[i],"raw_data",sep="/"),"no_separate")
bird <- format_data_in_a_folder2(0,list_of_all_folders[i],"no_separate")
}
graph1 <- function(df,title_ID,param){
print("GRAPH 1")
# Colony position
pos <- position_colony(df,param)
# CASE 1 : there are trips
if (length(which(df$dist_colony>500))!=0){
print("there is a trip")
# I chose only the dataset when bird is on trip
df_trip = df[which(df$trip!=0),]
idx_trip <- seq(from=df_trip$trip[1],to=length(df_trip$trip))
g1 <- ggplot(data = df_trip, aes(lon, lat)) +
geom_point(aes(col=idx_trip),shape = 16)+
geom_point(data = df[unique(which(df$gaps>1),which(df$trip!=0)),], aes(lon,lat), shape=1,colour = "black")+
geom_point(aes(x=pos[1],y=pos[2]),colour="brown",size=10,shape=3)+
scale_color_gradient(low = "yellow", high = "red")+
xlab("Longitude") +
ylab("Latitude") +
labs(title=paste(title_ID,": trajectory"))+
scale_fill_identity()+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))+
theme(plot.title = element_text(hjust = 0.5,size=9))
return(g1)
# CASE 2 : special case -> no trip
}else{
print("no trip")
# df_trip <- df
idx_no_trip <- seq(from=df$trip[1],to=length(df$trip))[-1]
# print("idx_trip")
# print(idx_trip)
g1 <- ggplot(data = df, aes(lon, lat)) +
#ggplot(data = df_trip, aes(lon, lat)) +
geom_point(aes(col=idx_no_trip),shape = 16)+
geom_point(data = df[unique(which(df$gaps>1),which(df$trip!=0)),], aes(lon,lat), shape=1,colour = "black")+
scale_color_gradient(low = "yellow", high = "red")+
geom_point(aes(x=pos[1],y=pos[2]),colour="brown",size=10,shape=3)+
xlab("Longitude") +
ylab("Latitude") +
labs(title=paste(title_ID,": trajectory"))+
scale_fill_identity()+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))+
theme(plot.title = element_text(hjust = 0.5,size=9))
return(g1)
}
}
source("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Formatage/Functions33.R")
### ---------- II.6. FORMAT FILES (IN NEW) ---------------------------
# Finally, we format the files well-named
for (i in 1:length(list_of_all_folders)){
print(paste("FOLDER",list_of_all_folders[i]))
#bird <- format_data_in_a_folder2(0,paste(list_of_all_folders[i],"raw_data",sep="/"),"no_separate")
bird <- format_data_in_a_folder2(0,list_of_all_folders[i],"no_separate")
}
library(datetime)
library(plyr)
library(lubridate)
library(M3)
library(dplyr)
library(stringr)
library(devtools)
library(suncalc)
library(gridGraphics)
library(tidyverse)
library(sf)
#library(mapview)
library(lutz)
library(filesstrings)
library(ggpubr)
library(cowplot)
source("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Formatage/Functions33.R")
# We first find all the sub folders in the mother folder
list_of_all_folders <- list.dirs(path="D:/OneDrive/Stage CESURE - Sete oiseaux marins/Formatage/test2",full.names=TRUE, recursive = TRUE)[-1]
print(paste("folder liste ",list_of_all_folders))
### ---------- II.6. FORMAT FILES (IN NEW) ---------------------------
# Finally, we format the files well-named
for (i in 1:length(list_of_all_folders)){
print(paste("FOLDER",list_of_all_folders[i]))
#bird <- format_data_in_a_folder2(0,paste(list_of_all_folders[i],"raw_data",sep="/"),"no_separate")
bird <- format_data_in_a_folder2(0,list_of_all_folders[i],"no_separate")
}
### ---------- II.6. FORMAT FILES (IN NEW) ---------------------------
# Finally, we format the files well-named
for (i in 1:length(list_of_all_folders)){
print(paste("FOLDER",list_of_all_folders[i]))
#bird <- format_data_in_a_folder2(0,paste(list_of_all_folders[i],"raw_data",sep="/"),"no_separate")
bird <- format_data_in_a_folder2(1,list_of_all_folders[i],"no_separate")
}
library(shiny); runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Remy Canet2/app_R_noted_by_marie.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/SeabirdMap/SeabirdMap/app_A_noted_by_Marie.R')
# Metadata table
metadata <- read.csv("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/metadata test/metadata test.csv", header = TRUE, sep=";",dec=".")
View(metadata)
# We don't take abbreviation columns neither local_hour column
metadata <-data.frame(archipelago=metadata["archipelago"],date=metadata["date"],island=metadata["island"],species=metadata["species"],bird_id=metadata["bird_id"],sex=metadata["sex"],sensor_name=metadata["sensor_name"],gps_id=metadata["gps_id"],file_formatted_by_Marie=metadata["file_formatted_by_Marie"])
# Rename
#names(metadata)[names(metadata) == "file_formatted_by_Marie"] <- "unique_name"
metadata["unique_name"] <- substr(metadata$file_formatted_by_Marie,1,nchar(metadata$file_formatted_by_Marie)-23)
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
View(metadata)
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
### ----- I. INTRODUCTION --------------------
### -- I.1. LIBRARY --------------------------
library(shiny)
library(leaflet)
library(viridis)
library(leaflegend)
library(DT)
library(plotly)
library(RSQLite)
library(plyr)
library(dplyr)
library(stringr)
library(markdown)
library(shinythemes)
library(shinydashboard)
library(shinyWidgets)
library(shinycssloaders)
library(shinyBS)
library(shinyjs)
library(GeoLight)
library(lubridate)
library(crosstalk)
library(raster)
library(htmlwidgets)
library(htmltools)
withBusyIndicatorUI <- function(button) {
id <- button[['attribs']][['id']]
div(
style="display:inline-block",
`data-for-btn` = id,
button,
span(
class = "btn-loading-container",
shinyjs::hidden(
icon("spinner", class = "btn-loading-indicator fa-spin"),
icon("check", class = "btn-done-indicator")
)
),
shinyjs::hidden(
div(class = "btn-err",
div(icon("exclamation-circle"),
tags$b("Error: "),
span(class = "btn-err-msg")
)
)
)
)
}
# Call this function from the server with the button id that is clicked and the
# expression to run when the button is clicked
withBusyIndicatorServer <- function(buttonId, expr) {
# UX stuff: show the "busy" message, hide the other messages, disable the button
loadingEl <- sprintf("[data-for-btn=%s] .btn-loading-indicator", buttonId)
doneEl <- sprintf("[data-for-btn=%s] .btn-done-indicator", buttonId)
errEl <- sprintf("[data-for-btn=%s] .btn-err", buttonId)
shinyjs::disable(buttonId)
shinyjs::show(selector = loadingEl)
shinyjs::hide(selector = doneEl)
shinyjs::hide(selector = errEl)
on.exit({
shinyjs::enable(buttonId)
shinyjs::hide(selector = loadingEl)
})
# Try to run the code when the button is clicked and show an error message if
# an error occurs or a success message if it completes
tryCatch({
value <- expr
shinyjs::show(selector = doneEl)
shinyjs::delay(2000, shinyjs::hide(selector = doneEl, anim = TRUE, animType = "fade",
time = 0.5))
value
}, error = function(err) { errorFunc(err, buttonId) })
}
# When an error happens after a button click, show the error
errorFunc <- function(err, buttonId) {
errEl <- sprintf("[data-for-btn=%s] .btn-err", buttonId)
errElMsg <- sprintf("[data-for-btn=%s] .btn-err-msg", buttonId)
errMessage <- gsub("^ddpcr: (.*)", "\\1", err$message)
shinyjs::html(html = errMessage, selector = errElMsg)
shinyjs::show(selector = errEl, anim = TRUE, animType = "fade")
}
# Metadata table
metadata <- read.csv("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/metadata test/metadata test.csv", header = TRUE, sep=";",dec=".")
# We don't take abbreviation columns neither local_hour column
metadata <-data.frame(archipelago=metadata["archipelago"],date=metadata["date"],island=metadata["island"],species=metadata["species"],bird_id=metadata["bird_id"],sex=metadata["sex"],sensor_name=metadata["sensor_name"],gps_id=metadata["gps_id"],file_formatted_by_Marie=metadata["file_formatted_by_Marie"])
# Rename
#names(metadata)[names(metadata) == "file_formatted_by_Marie"] <- "unique_name"
metadata["unique_name"] <- substr(metadata$file_formatted_by_Marie,1,nchar(metadata$file_formatted_by_Marie)-23)
# Turn into factor
metadata$archipelago <- as.factor(metadata$archipelago)
metadata$island <- as.factor(metadata$island)
metadata$species <- as.factor(metadata$species)
metadata$bird_id <- as.factor(metadata$bird_id)
metadata$band <- as.factor(metadata$band)
metadata$sex <- as.factor(metadata$sex)
metadata$sensor_name <- as.factor(metadata$sensor_name)
metadata$gps_id <- as.factor(metadata$gps_id)
metadata$file_formatted_by_Marie <- as.character(metadata$file_formatted_by_Marie)
metadata$unique_name <- as.factor(metadata$unique_name)
metadata$band <- as.factor(metadata$band)
View(metadata)
# We don't take abbreviation columns neither local_hour column
metadata <-data.frame(archipelago=metadata["archipelago"],date=metadata["date"],island=metadata["island"],species=metadata["species"],bird_id=metadata["bird_id"],band==metadata["band"],sex=metadata["sex"],sensor_name=metadata["sensor_name"],gps_id=metadata["gps_id"],file_formatted_by_Marie=metadata["file_formatted_by_Marie"])
# Rename
#names(metadata)[names(metadata) == "file_formatted_by_Marie"] <- "unique_name"
metadata["unique_name"] <- substr(metadata$file_formatted_by_Marie,1,nchar(metadata$file_formatted_by_Marie)-23)
# Turn into factor
metadata$archipelago <- as.factor(metadata$archipelago)
metadata$island <- as.factor(metadata$island)
metadata$species <- as.factor(metadata$species)
metadata$bird_id <- as.factor(metadata$bird_id)
metadata$band <- as.factor(metadata$band)
# Metadata table
metadata <- read.csv("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/metadata test/metadata test.csv", header = TRUE, sep=";",dec=".")
# We don't take abbreviation columns neither local_hour column
metadata <-data.frame(archipelago=metadata["archipelago"],date=metadata["date"],island=metadata["island"],species=metadata["species"],bird_id=metadata["bird_id"],band==metadata["band"],sex=metadata["sex"],sensor_name=metadata["sensor_name"],gps_id=metadata["gps_id"],file_formatted_by_Marie=metadata["file_formatted_by_Marie"])
# Metadata table
metadata <- read.csv("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/metadata test/metadata test.csv", header = TRUE, sep=";",dec=".")
# We don't take abbreviation columns neither local_hour column
metadata <-data.frame(archipelago=metadata["archipelago"],date=metadata["date"],island=metadata["island"],species=metadata["species"],bird_id=metadata["bird_id"],band==metadata["band"],sex=metadata["sex"],sensor_name=metadata["sensor_name"],gps_id=metadata["gps_id"],file_formatted_by_Marie=metadata["file_formatted_by_Marie"])
# Metadata table
metadata <- read.csv("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/metadata test/metadata test.csv", header = TRUE, sep=";",dec=".")
View(metadata)
metadata2 <- metadata
metadata <- metadata[,1]
metadata <- metadata2
metadata <- metadata[,"archipelago"]
# Metadata table
metadata <- read.csv("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/metadata test/metadata test.csv", header = TRUE, sep=";",dec=".")
# We don't take abbreviation columns neither local_hour column
metadata <-data.frame(archipelago=metadata["archipelago"],date=metadata["date"],island=metadata["island"],species=metadata["species"],bird_id=metadata["bird_id"],band=metadata["band"],sex=metadata["sex"],sensor_name=metadata["sensor_name"],gps_id=metadata["gps_id"],file_formatted_by_Marie=metadata["file_formatted_by_Marie"])
# Rename
#names(metadata)[names(metadata) == "file_formatted_by_Marie"] <- "unique_name"
metadata["unique_name"] <- substr(metadata$file_formatted_by_Marie,1,nchar(metadata$file_formatted_by_Marie)-23)
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
View(metadata)
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/SeabirdMap/SeabirdMap/app_A_noted_by_Marie.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/SeabirdMap/SeabirdMap/app_A_noted_by_Marie.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
help("prettyCheckbox")
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
metadata[ABR_2022-03-10_SU_SLEU_1_IGO_IG20_HLOC,]
metadata["ABR_2022-03-10_SU_SLEU_1_IGO_IG20_HLOC",]
View(metadata)
# Metadata table
metadata <- read.csv("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/metadata test/metadata test.csv", header = TRUE, sep=";",dec=".")
# We don't take abbreviation columns neither local_hour column
metadata <-data.frame(archipelago=metadata["archipelago"],date=metadata["date"],island=metadata["island"],species=metadata["species"],bird_id=metadata["bird_id"],band=metadata["band"],sex=metadata["sex"],sensor_name=metadata["sensor_name"],gps_id=metadata["gps_id"],file_formatted_by_Marie=metadata["file_formatted_by_Marie"])
# Rename
#names(metadata)[names(metadata) == "file_formatted_by_Marie"] <- "unique_name"
metadata["unique_name"] <- substr(metadata$file_formatted_by_Marie,1,nchar(metadata$file_formatted_by_Marie)-23)
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/SeabirdMap/SeabirdMap/app_A_noted_by_Marie.R')
# Metadata table
metadata <- read.csv("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/metadata test/metadata test.csv", header = TRUE, sep=";",dec=".")
# We don't take abbreviation columns neither local_hour column
metadata <-data.frame(archipelago=metadata["archipelago"],date=metadata["date"],island=metadata["island"],species=metadata["species"],bird_id=metadata["bird_id"],band=metadata["band"],sex=metadata["sex"],sensor_name=metadata["sensor_name"],gps_id=metadata["gps_id"],file_formatted_by_Marie=metadata["file_formatted_by_Marie"])
# Rename
#names(metadata)[names(metadata) == "file_formatted_by_Marie"] <- "unique_name"
metadata["unique_name"] <- substr(metadata$file_formatted_by_Marie,1,nchar(metadata$file_formatted_by_Marie)-23)
# Turn into factor
metadata$archipelago <- as.factor(metadata$archipelago)
metadata$island <- as.factor(metadata$island)
metadata$species <- as.factor(metadata$species)
metadata$bird_id <- as.factor(metadata$bird_id)
metadata$band <- as.factor(metadata$band)
metadata$sex <- as.factor(metadata$sex)
metadata$sensor_name <- as.factor(metadata$sensor_name)
metadata$gps_id <- as.factor(metadata$gps_id)
metadata$file_formatted_by_Marie <- as.character(metadata$file_formatted_by_Marie)
metadata$unique_name <- as.factor(metadata$unique_name)
# We take care of date
metadata$date = as.Date(metadata$date,format="%d/%m/%Y")
metadata$date[1]
metadata$date[1]+hours(1)
metadata$date[1]+years(2)
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie2.R')
metadata[1,]
level_col <- levels(metadata$species)
col_final <- c(1:length(metadata$species))
col_final
pal <- c(    '#1f77b4',  # muted blue
'#ff7f0e',  # safety orange
'#2ca02c',  # cooked asparagus green
'#d62728',  # brick red
'#9467bd',  # muted purple
'#8c564b',  # chestnut brown
'#e377c2',  # raspberry     yogurt pink
'#7f7f7f',  # middle gray
'#bcbd22',  # curry yellow-green
'#17becf'   # blue-teal
)
pal <- rep(pal, 1000)
pal[3]
level_col <- levels(metadata$species)
col_final <- c(1:length(metadata$species))
col_final
for (i in 1:level_col){
idx_color <- which(metadata$species==level_col[i])
color_pal=pal[i]
col_final[idx_color] <- color_pal
}
level_col
which(metadata$species==level_col[1])
col_final <- c(1:length(metadata$species))
col_final
for (i in 1:level_col){
print(paste("i ",i))
idx_color <- which(metadata$species==level_col[i])
print(paste("idx color ",idx_color))
color_pal=pal[i]
col_final[idx_color] <- color_pal
}
for (i in 1:length(level_col)){
print(paste("i ",i))
idx_level <- which(metadata$species==level_col[i])
print(paste("idx color ",idx_level))
color_pal=pal[i]
col_final[idx_level] <- color_pal
}
col_final
library(shiny); runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
paste("metadata_chosen","species",sep="$")
metadata_chosen$species
metadata=$species
metadata$species
"metadata$species"
a <- "metadata$species"
a[1]
nchar(a)
as.dataframe(a)
as.name("metadata$species")
levels(as.name("metadata$species"))
set.seed(1)
df1 <- data.frame(sample(10))
df2 <- data.frame(sample(10))
df3 <- data.frame(sample(10))
i <- 1
summary(get(paste0("df",i)))
get(paste0("df",i))
get(paste0("metadata","$species"))
metadata$species
paste0("metadata","$species")
get("metadata$species")
get("metadata")
get("metadata")$species
a <- "species"
metadata$a
metadata$(a)
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
a <- "species"
as.value(a)
metadata$"species"
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/SeabirdMap/SeabirdMap/app_A_noted_by_Marie.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
nrow(metadata$archipelago)
nrow(metadata)
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/SeabirdMap/SeabirdMap/app_A_noted_by_Marie.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/SeabirdMap/SeabirdMap/app_A_noted_by_Marie.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Remy Canet2/app_R_noted_by_marie.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Remy Canet2/app_R_noted_by_marie.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
help("addLegend")
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Remy Canet2/app_R_noted_by_marie.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie8.R')
library(shiny); runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie9.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie9.R')
runApp('app_RA_by_Marie9.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie9.R')
help(renderDataTable)
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie9.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie9.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie10.R')
runApp('D:/OneDrive/Stage CESURE - Sete oiseaux marins/Shiny/Marie/app_RA_by_Marie10.R')
setwd("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Formatage/formatting")
source("Functions_by_Marie.R")
## We format the files well-named manually
for (i in 1:length(list_of_all_folders)){
cat(green("FOLDER",list_of_all_folders[i],"\n"))
bird <- format_data_in_a_folder(1,list_of_all_folders[i],"no_separate")
}
setwd("D:/OneDrive/Stage CESURE - Sete oiseaux marins/Formatage/formatting_by Marie")
source("Functions_by_Marie.R")
# We first find all the sub folders in the mother folder 'folders to format'
list_of_all_folders <- list.dirs(path="./folders to format",full.names=TRUE, recursive = TRUE)[-1]
cat(green("here you folder list: ",list_of_all_folders,"\n"))
## We format the files well-named manually
for (i in 1:length(list_of_all_folders)){
cat(green("FOLDER",list_of_all_folders[i],"\n"))
bird <- format_data_in_a_folder(1,list_of_all_folders[i],"no_separate")
}
